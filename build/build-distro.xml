<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="build" basedir=".">
	<description>
	TODO:Adapt
	Create Runnable Jar for Project MosaicFX with libraries in sub-folder.
	Written by Jens Gulden and Bj√∂rn Benner. ANT 1.7 is required
	This script compiles all .xmf-files, creates afterwards xmf.img as well as mosaic.xmf and creates finally a build.
	It is not necessary to modify paths as this script facilitates only relatives
	</description>
	<target name="build" depends="compile, init">
		<!-- If there is a SNAPSHOT, it should be deleted -->
		<delete file="${outputArchive}" failonerror="no"/>
		<copy file="./resources/ini-linux.txt" tofile="./output/ini-linux.txt"/>
		<copy file="./resources/ini-win.txt" tofile="./output/ini-win.txt"/>
		<!-- set version -->
		<replace file="./output/ini-linux.txt" token="@@VERSION@@" value="${version}"/>
		<replace file="./output/ini-win.txt" token="@@VERSION@@" value="${version}"/>
		<replace file="./output/ini-linux.txt" token="@@BUILDDATE@@" value="${loadedBuildDate}"/>
		<replace file="./output/ini-win.txt" token="@@BUILDDATE@@" value="${loadedBuildDate}"/>
		<antcall target="zip"/>
		<delete file="./output/ini-win.txt"/>
		<delete file="./output/ini-linux.txt"/>
	</target>
	<target name="zip">
		<zip destfile="${outputArchive}" compress="yes" duplicate="fail">
			<zipfileset dir=".." prefix="${prefix}">
				<include name="bin/**"/>
				<include name="lib/*.jar"/>
				<include name="lib/poi-3.10.1/*.jar"/>
				<include name="lib/poi-3.10.1/LICENSE"/>
				<include name="lib/poi-3.10.1/NOTICE"/>
				<include name="setting/**"/>
				<exclude name="**/.DS_Store"/>
				<exclude name="bin/log4j2.xml"/>
				<exclude name="bin/stylesheet.css"/>
				<exclude name="bin/.idea/"/>
				<include name="resources/**"/>
				<include name="javafx/bin/*.dll"/>
				<include name="javafx/lib/*.jar"/>
				<include name="u_javafx/lib/*.jar"/>
				<include name="u_javafx/lib/*.so"/>
				<include name="m_javafx/lib/*.jar"/>
				<include name="m_javafx/lib/*.dylib"/>
			</zipfileset>
			<zipfileset dir="./output/" prefix="${prefix}">
				<!-- ini files -->
				<include name="ini-win.txt"/>
				<include name="ini-linux.txt"/>
			</zipfileset>
			<zipfileset dir="./resources/" prefix="${prefix}" filemode="755">
				<include name="*.sh"/>
				<!-- start scripts -->
				<include name="*.bat"/>
			</zipfileset>
			<zipfileset dir="./resources/" prefix="${prefix}">
				<include name="changelog.txt"/>
			</zipfileset>
			<zipfileset dir="./resources/" prefix="${prefix}" filemode="755">
				<include name="XModeler.app/**"/>
			</zipfileset>
			<zipfileset dir="../../XMF/com.ceteva.xmf.machine" prefix="${prefix}">
				<include name="bin/**"/>
				<exclude name="**/.DS_Store"/>
			</zipfileset>
			<zipfileset dir="../../XMF/com.ceteva.xmf.system" prefix="${prefix}">
				<include name="xmf-addons/**"/>
				<include name="xmf-src/**"/>
				<include name="demo/**"/>
				<include name="xmf-img/compiler.img"/>
				<include name="xmf-img/xmf.img"/>
				<include name="xmf-img/mosaic.img"/>
				<exclude name="**/.DS_Store"/>
			</zipfileset>
			<!-- doc/ -->
			<zipfileset dir="../../XMF/com.ceteva.xmf.system/xmf-doc/xmf-books" prefix="${prefix}doc/">
				<include name="Bluebook.pdf"/>
			</zipfileset>
			<mappedresources>
				<zipfileset dir="../../XMF/com.ceteva.xmf.system/xmf-doc/xmf-books/SuperLanguages" prefix="${prefix}doc/">
					<include name="book.pdf"/>
				</zipfileset>
				<globmapper from="book.pdf" to="${prefix}doc/Super Languages.pdf"/>
			</mappedresources>
			<zipfileset dir="../../XMF/com.ceteva.xmf.system/xmf-doc/xmf-books/AppliedMetamodelling" prefix="${prefix}doc/">
				<include name="Applied Metamodelling (Second Edition).pdf"/>
			</zipfileset>
		</zip>
	</target>
	<target name="compile">
		<ant antfile="buildXMF.xml"/>
	</target>
	<target name="init">
		<property file="build.properties"/>
		<property name="loadedVersion" value="${version}"/>
		<property name="loadedBuildDate" value="${builddate}"/>
		<property name="output" location="output/"/>
		<property name="archiveDir" location="${output}/archiv/"/>
		<condition property="version" value="${loadedVersion}-SNAPSHOT" else="${loadedVersion}">
			<or>
				<resourceexists>
					<file file="${output}/XModeler-${loadedVersion}.zip"/>
				</resourceexists>
				<resourceexists>
					<file file="${archiveDir}/XModeler-${loadedVersion}.zip"/>
				</resourceexists>
			</or>
		</condition>
		<property name="outputArchive" location="${output}/XModeler-${version}.zip"/>
		<property name="prefix" value="XModeler/"/>
		<echo message="Building XModeler ${version}."/>
		<antcall target="cleanOutputFolder"/>
	</target>
	<target name="cleanOutputFolder">
		<move todir="${archiveDir}" overwrite="true">
			<fileset dir="${output}">
				<include name="*.zip"/>
			</fileset>
		</move>
	</target>
</project>
